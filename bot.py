import discord
from discord.ext import commands, tasks
import random
import openai
import asyncio
import requests
import datetime
import json
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv()
TOKEN = os.getenv("TOKEN")  
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å –∫–æ–º–∞–Ω–¥ –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞–º–µ—Ä–µ–Ω–∏—è
intents = discord.Intents.all()
bot = commands.Bot(command_prefix='!', intents=intents)

# –§–∞–π–ª –ø–∞–º—è—Ç–∏ –±–æ—Ç–∞
MEMORY_FILE = "bot_memory.json"

# –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞—ë–º –µ–≥–æ
if not os.path.exists(MEMORY_FILE):
    with open(MEMORY_FILE, "w", encoding="utf-8") as f:
        json.dump({}, f, ensure_ascii=False, indent=4)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–∞–º—è—Ç—å
with open(MEMORY_FILE, "r", encoding="utf-8") as f:
    memory = json.load(f)

# –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞–º—è—Ç–∏
def save_memory():
    with open(MEMORY_FILE, "w", encoding="utf-8") as f:
        json.dump(memory, f, ensure_ascii=False, indent=4)

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def remember_user(user):
    if str(user.id) not in memory:
        memory[str(user.id)] = {"name": user.name, "favorite_games": [], "chat_history": [], "current_game": None}
        save_memory()

# –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é
async def add_chat_to_memory(user, message):
    if str(user.id) in memory:
        memory[str(user.id)]["chat_history"].append(message)
        if len(memory[str(user.id)]["chat_history"]) > 10:
            memory[str(user.id)]["chat_history"].pop(0)
        save_memory()

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã
async def check_runtime():
    while True:
        now = datetime.datetime.now()
        weekday = now.weekday()  # 0 - –ü–Ω, 6 - –í—Å
        current_hour = now.hour

        if (weekday < 5 and (16 <= current_hour or current_hour < 2)) or (weekday >= 5 and (12 <= current_hour or current_hour < 2)):
            print("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω–æ–µ –≤—Ä–µ–º—è.")
        else:
            print("üõë –í—Ä–µ–º—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞. –ó–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É...")
            await bot.close()
            break

        await asyncio.sleep(600)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç

# –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
@bot.event
async def on_message(message):
    if message.author == bot.user:
        return
    
    await remember_user(message.author)
    await add_chat_to_memory(message.author, message.content)
    
    if "–ø—Ä–∏–≤–µ—Ç" in message.content.lower():
        await message.channel.send(f'–ü—Ä–∏–≤–µ—Ç, {message.author.name}! –ö–∞–∫ —Ç–≤–æ–∏ –¥–µ–ª–∞? üéÆ')
    
    await bot.process_commands(message)  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ª—é–±–∏–º–æ–π –∏–≥—Ä—ã
@bot.command()
async def favgame(ctx, *, game: str):
    await remember_user(ctx.author)
    memory[str(ctx.author.id)]["favorite_games"].append(game)
    save_memory()
    await ctx.send(f'üî• {ctx.author.name}, —è –∑–∞–ø–æ–º–Ω–∏–ª, —á—Ç–æ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è {game}!')

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏–≥—Ä —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
@tasks.loop(minutes=10)
async def check_game_activity():
    for guild in bot.guilds:
        for member in guild.members:
            if member.activity and isinstance(member.activity, discord.Game):
                game_name = member.activity.name
                await remember_user(member)
                memory[str(member.id)]["current_game"] = game_name
                save_memory()
                role_name = f'–ó–∞–¥—Ä–æ—Ç {game_name}'
                role = discord.utils.get(guild.roles, name=role_name)
                
                if not role:
                    role = await guild.create_role(name=role_name, reason="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏—Å–≤–æ–µ–Ω–∏–µ —Ä–æ–ª–µ–π –≥–µ–π–º–µ—Ä–∞–º")
                
                if role not in member.roles:
                    await member.add_roles(role)
                    await member.send(f'üèÜ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢–µ–ø–µ—Ä—å —Ç—ã –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ "–ó–∞–¥—Ä–æ—Ç {game_name}"!')

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è –∂–∏–≤–æ—Å—Ç–∏ –æ–±—â–µ–Ω–∏—è
@bot.command()
async def talk(ctx, *, message: str):
    responses = [
        "–û–≥–æ, –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –º—ã—Å–ª—å! üòÉ",
        "–ù—É –≤–æ—Ç, —Ç–µ–ø–µ—Ä—å —è –∑–∞–¥—É–º–∞–ª—Å—è... ü§î",
        "–†–∞—Å—Å–∫–∞–∂–∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ! üßê",
        "–¢—ã –≤—Å–µ–≥–¥–∞ —Ç–∞–∫ –≥–æ–≤–æ—Ä–∏—à—å, {user} üòÜ",
        "–û, —ç—Ç–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ —Ç–æ, —á—Ç–æ —Ç—ã –≥–æ–≤–æ—Ä–∏–ª —Ä–∞–Ω—å—à–µ! üéÆ"
    ]
    response = random.choice(responses).replace("{user}", ctx.author.name)
    await ctx.send(response)
    await add_chat_to_memory(ctx.author, message)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–π
@bot.event
async def on_ready():
    print(f'üöÄ –ë–æ—Ç {bot.user} –∑–∞–ø—É—â–µ–Ω!')
    bot.loop.create_task(check_runtime())
    check_game_activity.start()

bot.run(TOKEN)
